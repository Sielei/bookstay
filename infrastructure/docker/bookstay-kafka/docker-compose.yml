version: "3.3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${KAFKA_VERSION}
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
    volumes:
      - "./volumes/zookeeper/data:/var/lib/zookeeper/data"
      - "./volumes/zookeeper/transactions:/var/lib/zookeeper/log"
    healthcheck:
      test: "echo stat | nc localhost $$ZOOKEEPER_CLIENT_PORT"
    networks:
      - ${NETWORK:-kafka}


  kafka-broker-1:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    container_name: kafka-broker-1
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - "./volumes/kafka/broker-1:/var/lib/data"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
    networks:
      - ${NETWORK:-kafka}

  kafka-broker-2:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    container_name: kafka-broker-2
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - "./volumes/kafka/broker-2:/var/lib/data"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
    networks:
      - ${NETWORK:-kafka}

  schema-registry:
    image: confluentinc/cp-schema-registry:${KAFKA_VERSION}
    container_name: schema-registry
    restart: unless-stopped
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-2:9092,LISTENER_LOCAL://localhost:29092
      SCHEMA_REGISTRY_DEBUG: 'true'
    healthcheck:
      test: "curl -f http://localhost:8081 || exit 1"
    networks:
      - ${NETWORK:-kafka}

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.5
    container_name: kafka-schema-registry-ui
    depends_on:
      - schema-registry
    ports:
      - "8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8081
      PROXY: "true"
    healthcheck:
      test: "wget --quiet --tries=1 --spider http://localhost:8000 || exit 1"
    networks:
      - ${NETWORK:-kafka}

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:${KAFKA_VERSION}
    container_name: kafka-rest-proxy
    restart: unless-stopped
    depends_on:
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-2:9092,LISTENER_LOCAL://localhost:29092
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 30000
    healthcheck:
      test: "curl -f http://localhost:8082 || exit 1"
    networks:
      - ${NETWORK:-kafka}

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    container_name: kafka-topics-ui
    restart: unless-stopped
    depends_on:
      - kafka-rest-proxy
    ports:
      - "8085:8000"
    environment:
      KAFKA_REST_PROXY_URL: http://kafka-rest-proxy:8082
      PROXY: "true"
    healthcheck:
      test: "wget --quiet --tries=1 --spider http://localhost:8000 || exit 1"
    networks:
      - ${NETWORK:-kafka}

  zipkin:
    image: openzipkin/zipkin:2.23.16
    container_name: zipkin
    restart: unless-stopped
    ports:
      - "9411:9411"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9411" ]
    networks:
      - ${NETWORK:-kafka}

  kafka-manager:
    image: hlebalbau/kafka-manager:3.0.0.5
    container_name: kafka-manager
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
    healthcheck:
      test: "curl -f http://localhost:9000 || exit 1"
    networks:
      - ${NETWORK:-kafka}


networks:
  bookstay:
    driver: bridge